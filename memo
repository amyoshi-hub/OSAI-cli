npm run buildはtauli-app内で
cargo buildはtopで(ここ)

windowsはSDKをLIBなどに入れた状態で
set dir

raspi build
unset PKG_CONFIG_SYSROOT_DIR PKG_CONFIG_PATH OPENSSL_DIR CC CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER

# 環境変数の設定 (パスはあなたの環境に合わせて正確に調整)
export SYSROOT_ROOT="/home/amyoshi9/git/OSAI-browser/sysroot_raspi" # あなたのsysrootのパス

export PKG_CONFIG_SYSROOT_DIR="${SYSROOT_ROOT}"
export PKG_CONFIG_PATH="${SYSROOT_ROOT}/usr/lib/aarch64-linux-gnu/pkgconfig:${SYSROOT_ROOT}/usr/share/pkgconfig"
export PKG_CONFIG_ALLOW_CROSS=1

export OPENSSL_DIR="${SYSROOT_ROOT}" # openssl-sys クレート用
export CC="aarch64-linux-gnu-gcc"
export CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER="aarch64-linux-gnu-gcc"


IOT機器などtauriごと入らないものは
python serverなどをたててfiles.jsonをshareディレクトリにおき
OSAI/client/dummy/start_serなどのシグナルを送ることによってサーバーとしてOSAIに追加できる


windows build:
pcapのSDKをわかりやすく名前変えたりして、libディレクトリに入れるとするならば
$env:RUSTFLAGS = "-L C:\Users\UserName\dev\OSAI-browser-dev\lib\npcap\Lib"
をシェルで打ち込み
それからcargo tauri build
